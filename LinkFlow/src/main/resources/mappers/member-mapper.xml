<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	<resultMap type="MemberDto" id="memberResult" extends="commonMapper.commonResult">
		<id column="USER_ID" property="userId"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="DEPT_CODE" property="deptCode"/>
		<result column="DEPT_NAME" property="deptName"/>
		<result column="position" property="position"/>
		<result column="USER_NAME" property="userName"/>
		<result column="PHONE" property="phone"/>
		<result column="BIRTH_DATE" property="birthDate"/>
		<result column="EDUCATION" property="education"/>
		<result column="ADDRESS" property="address"/>
		<result column="ZIP_CODE" property="zipCode"/>
		<result column="DETAIL_ADD" property="detailAdd"/>
		<result column="HIRE_DATE" property="hireDate"/>
		<result column="RETIRE_DATE" property="retireDate"/>
		<result column="SUPER_RIGHT" property="superRight"/>
		<result column="HR_RIGHT" property="hrRight"/>
		<result column="SP_RIGHT" property="spRight"/>
		<result column="BOARD_RIGHT" property="boardRight"/>
		<result column="DEPT_RIGHT" property="deptRight"/>
		<result column="PROFILE_URL" property="profileUrl"/>
		<result column="SIGN_URL" property="signUrl"/>
		<result column="DAYOFF" property="dayOff"/>
		<result column="SECONDARY_CODE" property="secondaryCode"/>
		<result column="SECONDARY_USESE" property="secondaryUsese"/>
		<result column="RANK_BCODE" property="rankBcode"/>
		<result column="SERVICEYEAR" property="serviceYear"/>
		<result column="year_walkDay" property="yearWalkDay"/>
		<result column="year_walktime" property="yearWalktime"/>
		<result column="year_lateCount" property="yearlateCount"/>
		<result column="year_absentCount" property="yearAbsentCount"/>
		<result column="month_walkDay" property="monthWalkDay"/>
		<result column="month_walktime" property="monthWalktime"/>
		<result column="month_lateCount" property="monthlateCount"/>
		<result column="month_absentCount" property="monthAbsentCount"/>
		<result column="searhstart_day" property="dayoffStartsearch"/>
		<result column="searhend_day" property="dayoffendsearch"/>
		<result column="dayoffCount" property="dayOffCount"/>
		<result column="TOTAL_MEMBERS" property="totalMember"/>
		<result column="DEPT_CAPNAME" property="deptCapName"/>
		<result column="DEPT_MEMBERS" property="deptMember"/>
		<result column="GENDER" property="gender"/>
		
	</resultMap>	
	
	<!-- 로그인 쿼리 아래 값 색션에 loginUser이름으로 담김 -->
	<select id="loginMember" resultMap="memberResult">
	SELECT 
	    M.USER_ID,
	    M.USER_PWD,
      M.DEPT_CODE,
	    D.DEPT_TITLE DEPT_NAME,
	    c.sub_name position,
	    M.USER_NAME,
	    M.PHONE,
	    TO_CHAR(M.BIRTH_DATE,'YYYY-MM-DD') as BIRTH_DATE,
	    M.EDUCATION,
	    M.ADDRESS,
	    M.ZIP_CODE,
	    M.DETAIL_ADD,
	    TO_CHAR(M.HIRE_DATE,'YYYY-MM-DD') HIRE_DATE,
	    TO_CHAR( M.RETIRE_DATE,'YYYY-MM-DD') as RETIRE_DATE,
	    M.SUPER_RIGHT,
	    M.HR_RIGHT,
	    M.SP_RIGHT,
	    M.BOARD_RIGHT,
	    M.DEPT_RIGHT,
	    M.PROFILE_URL,
	    M.SIGN_URL,
	    M.DAYOFF,
	    M.SECONDARY_CODE,
	    M.SECONDARY_USESE,
	    M.RANK_BCODE,
	    M.REG_DATE,
	    M.MOD_DATE,
	    M.REG_ID,
	    M.MOD_ID,
	    M.DEL_YN,
	    M.GENDER,
	    TRUNC(months_between(SYSDATE,M.HIRE_DATE) /12) as SERVICEYEAR
	FROM 
	    TB_MEMBER M
	JOIN 
	    TB_COMMON C ON M.RANK_BCODE = C.MAIN_CODE AND M.RANK_SCODE = C.SUB_CODE
	JOIN 
	    tb_dept D ON M.DEPT_CODE = D.dept_code
	where m.user_id = #{userId}
	AND M.DEL_YN = 'N'
	</select>


	
	
	<!-- 마이페이지 비밀번호 업데이트 -->
	<update id="updatePwd">
	UPDATE TB_MEMBER 
	SET USER_PWD =#{userPwd}
	WHERE USER_ID = #{userId}
	</update>
	
	
	<!-- 나의 근태 조회용 -->
	<select id="myAttemdamce" resultMap="memberResult">
		SELECT
		    m.USER_ID,
		    m.USER_NAME,
		    
		    COUNT(DISTINCT CASE WHEN EXTRACT(YEAR FROM a.START_DTIME) = EXTRACT(YEAR FROM SYSDATE) THEN TO_CHAR(a.START_DTIME, 'YYYY-MM-DD') ELSE NULL END) AS year_walkDay,
		    TRUNC(SUM(CASE WHEN EXTRACT(YEAR FROM a.START_DTIME) = EXTRACT(YEAR FROM SYSDATE) AND a.START_DTIME IS NOT NULL AND a.END_DTIME IS NOT NULL THEN (a.END_DTIME - a.START_DTIME) * 24 ELSE 0 END)) AS year_walktime,
		    COUNT(CASE WHEN EXTRACT(YEAR FROM a.START_DTIME) = EXTRACT(YEAR FROM SYSDATE) AND a.START_DTIME IS NOT NULL AND TO_CHAR(a.START_DTIME, 'HH24:MI:SS') > '09:10:00' THEN 1 ELSE NULL END) AS year_lateCount,
		    COUNT(CASE WHEN EXTRACT(YEAR FROM a.START_DTIME) = EXTRACT(YEAR FROM SYSDATE) AND a.START_DTIME IS NULL THEN 1 ELSE NULL END) AS year_absentCount,
		    
		    COUNT(DISTINCT CASE WHEN EXTRACT(YEAR FROM a.START_DTIME) = EXTRACT(YEAR FROM SYSDATE) AND EXTRACT(MONTH FROM a.START_DTIME) = EXTRACT(MONTH FROM SYSDATE) THEN TO_CHAR(a.START_DTIME, 'YYYY-MM-DD') ELSE NULL END) AS month_walkDay,
		    TRUNC(SUM(CASE WHEN EXTRACT(YEAR FROM a.START_DTIME) = EXTRACT(YEAR FROM SYSDATE) AND EXTRACT(MONTH FROM a.START_DTIME) = EXTRACT(MONTH FROM SYSDATE) AND a.START_DTIME IS NOT NULL AND a.END_DTIME IS NOT NULL THEN (a.END_DTIME - a.START_DTIME) * 24 ELSE 0 END)) AS month_walktime,
		    COUNT(CASE WHEN EXTRACT(YEAR FROM a.START_DTIME) = EXTRACT(YEAR FROM SYSDATE) AND EXTRACT(MONTH FROM a.START_DTIME) = EXTRACT(MONTH FROM SYSDATE) AND a.START_DTIME IS NOT NULL AND TO_CHAR(a.START_DTIME, 'HH24:MI:SS') > '09:10:00' THEN 1 ELSE NULL END) AS month_lateCount,
		    COUNT(CASE WHEN EXTRACT(YEAR FROM a.START_DTIME) = EXTRACT(YEAR FROM SYSDATE) AND EXTRACT(MONTH FROM a.START_DTIME) = EXTRACT(MONTH FROM SYSDATE) AND a.START_DTIME IS NULL THEN 1 ELSE NULL END) AS month_absentCount
		FROM
		    TB_MEMBER m
		    LEFT JOIN TB_ATTENDANCE a ON m.USER_ID = a.USER_ID
		WHERE
		    m.USER_ID = #{userId}
		GROUP BY
		    m.USER_ID, m.USER_NAME
		ORDER BY
		    m.USER_ID
	
	</select>
	
	<!-- 연차 사용 검색 조회 -->
	<select id="searchDayoff" resultMap="memberResult">
		select
	     m.user_id
	    ,to_char(d.start_day,'YYYY-MM-DD') searhstart_day
	    ,TO_CHAR(d.end_day,'YYYY-MM-DD') searhend_day
	    ,c.sub_name position
	    ,d.end_day-d.start_day dayoffCount
		from tb_member m 
		join TB_dayoff d on (m.user_id = d.user_id) 
		JOIN 
	    TB_COMMON C ON d.DAYOFF_BCODE = C.MAIN_CODE AND d.DAYOFF_SCODE = C.SUB_CODE
		where m.user_id= #{userId}
		and d.start_day BETWEEN to_date(#{dayoffStartsearch}, 'YYYY/MM/DD') and to_date(#{dayoffendsearch}, 'YYYY/MM/DD') 
	</select>
	
	<select id="groupList" resultMap="memberResult">
		SELECT 
    D.DEPT_CODE,
    D.DEPT_TITLE AS DEPT_NAME,
    COUNT(M.USER_NAME) AS TOTAL_MEMBERS,
    MAX(CASE WHEN C.SUB_CODE >= '04' THEN M.USER_NAME END) AS DEPT_CAPNAME,
    CASE WHEN COUNT(M.USER_NAME) = 0 THEN NULL ELSE LISTAGG(M.USER_NAME || '|' || M.USER_ID, ', ') WITHIN GROUP (ORDER BY M.USER_ID) END AS DEPT_MEMBERS
		FROM 
		    TB_DEPT D 
		LEFT OUTER JOIN 
		    TB_MEMBER M ON D.DEPT_CODE = M.DEPT_CODE AND M.DEL_YN = 'N'
		LEFT JOIN 
		    TB_COMMON C ON M.RANK_BCODE = C.MAIN_CODE AND M.RANK_SCODE = C.SUB_CODE
		WHERE 
		    D.DEL_YN = 'N'
		GROUP BY
		    D.DEPT_CODE,
		    D.DEPT_TITLE
		ORDER BY 
    D.DEPT_CODE
	</select>

	<select id="groupinfoMember" resultMap="memberResult">
		SELECT 
	    M.USER_ID,
	    D.DEPT_TITLE DEPT_NAME,
	    c.sub_name position,
	    M.USER_NAME,
	    M.PHONE,
	    M.ADDRESS,
	    TO_CHAR(M.HIRE_DATE,'YYYY-MM-DD') HIRE_DATE,
	    M.PROFILE_URL
	
		FROM 
		    TB_MEMBER M
		JOIN 
		    TB_COMMON C ON M.RANK_BCODE = C.MAIN_CODE AND M.RANK_SCODE = C.SUB_CODE
		JOIN 
		    tb_dept D ON M.DEPT_CODE = D.dept_code
		where m.user_id = #{userId}
		AND M.DEL_YN = 'N'

	</select>
	<!-- 프로필 사진 업뎃 -->
	<update id="updateMember">
		UPDATE TB_MEMBER 
			SET 
			     phone = #{phone}
			    ,ADDRESS = #{address}
			    ,ZIP_CODE =#{zipCode}
			    ,DETAIL_ADD=#{detailAdd}
			    ,PROFILE_URL=#{profileUrl}
			WHERE USER_ID = #{userId}
			and user_pwd = #{userPwd}	
	</update>
	
	<!-- [전자결재] 서명 설정 ( 작성자 : 김지우 )  -->
	<update id="uploadSignImg">
		UPDATE TB_MEMBER
		SET SIGN_URL = #{signUrl},
			  MOD_DATE = SYSDATE
	  WHERE USER_ID = #{userId}
	</update>
	
		<!-- 프로필 정보 업뎃 -->
	<update id="updateInfoMember">
		UPDATE TB_MEMBER 
			SET 
			     phone = #{phone}
			    ,ADDRESS = #{address}
			    ,ZIP_CODE =#{zipCode}
			    ,DETAIL_ADD=#{detailAdd}
			    
			WHERE USER_ID = #{userId}
			and user_pwd = #{userPwd}	
	</update>
	
	<update id="deleteProfill">
	UPDATE tb_member
	SET profile_url = NULL 
	WHERE user_id = #{userId}
	</update>
 	
 	<select id="SerchPwd" resultType="string">
 	SELECT 
 	 USER_PWD
 	FROM TB_MEMBER 
 	WHERE user_id = #{userId}
 	
 	</select>
 	
 	<!-- 남자 사원 수 조회용 - 황민우 -->
 	<select id="selectMale" resultType="_int">
 		SELECT
 		       COUNT(*)
 		  FROM TB_MEMBER
 		 WHERE GENDER = '남'
 		   AND RETIRE_DATE IS NULL
 	</select>
 	<!-- 여자 사원 수 조회용 - 황민우 -->
 	<select id="selectFemale" resultType="_int">
 		SELECT
 		       COUNT(*)
 		  FROM TB_MEMBER
 		 WHERE GENDER = '여'
 		   AND RETIRE_DATE IS NULL
 	</select>
 	<!-- 전체 사원 수 조회용 - 황민우 -->
 	<select id="selectAllMember" resultType="_int">
 		SELECT
 		       COUNT(*)
 		  FROM TB_MEMBER
 		 WHERE TO_CHAR(HIRE_DATE, 'YYYY-MM') <![CDATA[<=]]> #{date}
 	</select>
 	<!-- 입사자 조회용 - 황민우 -->
 	<select id="selectHireMember" resultType="_int">
 		SELECT
 		       COUNT(*)
 		  FROM TB_MEMBER
 		 WHERE TO_CHAR(HIRE_DATE, 'YYYY-MM') = #{date}
 	</select>
 	<!-- 퇴사자 조회용 - 황민우 -->
 	<select id="selectRetireMember" resultType="_int">
 		SELECT
 		       COUNT(*)
 		  FROM TB_MEMBER
 		 WHERE TO_CHAR(RETIRE_DATE, 'YYYY-MM') = #{date}
 	</select>
 	
 	<!-- 게시판 마스터 조회용 - 구성모 -->
 	<select id="selectCategoryMaster" resultMap="memberResult">
 	select 
 			 m.user_id
	    ,m.user_name
	    ,c.sub_name position
	    ,d.dept_title DEPT_NAME
		from tb_member m
		join tb_category ct on (ct.reg_id = m.user_id)
		join tb_dept d on (m.dept_code = d.dept_code)
		join tb_common c on (c.main_code = m.rank_bcode and c.sub_code = m.rank_scode)
		where board_category = #{boardType}
 	</select>
 	
 	<!-- 메일수신할때 유저있는지 체크용 - 구성모 -->
 	<select id="selectCheckUser" resultType="_int">
  	select
  				 count(*)
  	from tb_member
   <where>
   	<foreach item="item" collection="array"
   					 open="user_id in (" separator="," close=")">
   		#{item}
   	</foreach>
   </where>
  </select>
 	
</mapper>
