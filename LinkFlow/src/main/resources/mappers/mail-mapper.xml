<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mailMapper">

<resultMap id="sendMailResult" type="sendMailDto" extends="commonMapper.commonResult">
		<id column="mail_no" property="mailNo" />
		<result column="mail_title" property="mailTitle" />
		<result column="mail_content" property="mailContent" />
		<result column="trans_time" property="transTime" />
		<result column="temp_save" property="tempSave" />
		<result column="remove_yn" property="removeYN" />
		
		<result column="user_name" property="userName" />
		
		<collection resultMap="attachMapper.attachResult" property="attachList" />
	</resultMap>
	
		<resultMap id="receiveMailResult" type="ReceiveMailDto">
		<id column="user_id" property="userId" />
		<result column="mail_no" property="mailNo" />
		<result column="del_yn" property="delYN" />
		<result column="read_yn" property="readYN" />
		<result column="user_name" property="userName" />
		<result column="mail_Title" property="mailTitle" />
		<result column="trans_time" property="transTime" />
	</resultMap>
	
	<select id="selectReceiveMailListCount" resultType="_int">
		select count(*)
			from re_mail r
			join tb_mail s on (r.mail_no = s.mail_no)		
			where r.del_yn = 'N'
				and s.temp_save = '02'
				and type = 'R'
				and user_id = #{userId}
	</select>
	
	<select id="selectReceiveList" resultMap="receiveMailResult">
		select
				  r.user_id
				, r.mail_no
				, r.read_yn
				, m.user_name
				, s.mail_title
				, to_char(s.trans_time, 'MM-DD HH24:MI') as trans_time
			from re_mail r
			join tb_mail s on (r.mail_no = s.mail_no)			
      join tb_member m on ( m.user_id = s.reg_id)
			where r.del_yn = 'N'
        and r.type= 'R'
				and r.user_id = #{userId}
				order by mail_no desc
	</select>
	
	<select id="selectNonReadCount" resultType="_int">
		select count(*)
			from re_mail r
			join tb_mail s on (r.mail_no = s.mail_no)
			where r.del_yn = 'N'
				and s.temp_save = '02'
				and type = 'R'
				and read_yn = 'N'
				and user_id = #{userId}
	</select>
	
	<select id="selectTrashCount" resultType="_int">
		select count(*)
			from re_mail
			where del_yn = 'Y'
				and user_id = #{userId}
	</select>
	
	<select id="selectSendListCount" resultType="_int">
		select count(*)
			from re_mail r
			join tb_mail s on (r.mail_no = s.mail_no)		
			where r.del_yn = 'N'
				and s.temp_save = '02'
				and type = 'S'
				and user_id = #{userId}
	</select>
	
	<select id="selectSendList" resultMap="receiveMailResult">
		select
				  r.user_id
				, r.mail_no
				, r.read_yn
				, m.user_name
				, s.mail_title
				, to_char(s.trans_time, 'MM-DD HH24:MI') as trans_time
			from re_mail r
			join tb_mail s on (r.mail_no = s.mail_no)			
      join tb_member m on ( m.user_id = s.reg_id)
			where r.del_yn = 'N'
        and r.type= 'S'
        and s.temp_save = '02'
				and r.user_id = #{userId}
				order by mail_no desc
	</select>
	
	<select id="selectMail" resultMap="sendMailResult">
		select
	    s.mail_no
	  , s.mail_title
	  , s.mail_content
	  , s.trans_time
	  , s.reg_id
	  , m.user_name
	  , file_no
    , file_path
    , filesystem_name
    , origin_name
	from tb_mail s
	left join tb_attachment on (ref_category ='M' and ref_no = s.mail_no)
	join tb_member m on(s.reg_id = m.user_id)
		where mail_no = ${no}
	</select>

	<update id="updateMailRead">
	update
  				re_mail
			 set
			     read_yn = 'Y'
		 where mail_no = #{no}
		 	 and type = 'R'
	</update>
	
	<insert id="insertSendMail">
  	insert
  		into tb_mail
  		(
  			mail_no
  		, mail_title
  		, mail_content
  		, temp_save
  		, receiver
  		, reg_id
  		, mod_id
  		)
  		values
  		(
				seq_mailno.nextval
			, #{mailTitle}
			, #{mailContent}
			, #{tempSave}
			, #{receiver}
			, #{regId}
			, #{modId}
  		)
  </insert>
  
  <insert id="insertReceiveeMail">
  	insert
  		into re_mail
  		(
  			mail_no
  		, user_id
  		, type
  		)
  		values
  		(
				seq_mailno.currval
			, #{emailId}
			, 'R'
  		)
  </insert>
  
  <insert id="insertSendReMail">
  	insert
  		into re_mail
  		(
  			mail_no
  		, user_id
  		, type
  		, read_yn
  		)
  		values
  		(
				seq_mailno.currval
			, #{regId}
			, 'S'
			, 'Y'
  		)
  </insert>
  
  <select id="selectCurrnetTempSave" resultType="_int">
  	select
  	 	seq_mailno.currval
		from dual
  </select>
  
  <update id="updateTempSaveMail">
  	update
  				tb_mail
			 set
			 	 	 mail_title= #{mailTitle}
			   , mail_content = #{mailContent}
			   , mod_id = #{modId}
			   , temp_save = #{tempSave}
			   , trans_time = sysdate
		 where mail_no = #{mailNo} 
  </update>
  
  <select id="selectTempSaveListCount" resultType="_int">
  	select count(*) 
  	  from tb_mail
  	 where 
  	 			del_yn = 'N'
  	 	and temp_save = '01'
  	  and reg_id = #{userId}
  </select>
  
  <select id="selectTempSaveList" resultMap="sendMailResult">
		select
				  s.reg_id
				, s.mail_no
				, m.user_name
				, s.mail_title
				, to_char(s.trans_time, 'MM-DD HH24:MI') as trans_time
			from tb_mail s	
      join tb_member m on ( m.user_id = s.reg_id)
			where s.del_yn = 'N'
				and s.reg_id = #{userId}
				and s.temp_save = '01'
				order by mail_no desc
	</select>
	
	<insert id="insertTempSaveReceiveMail">
  	insert
  		into re_mail
  		(
  			mail_no
  		, user_id
  		, type
  		)
  		values
  		(
				#{mailNo}
			, #{emailId}
			, 'R'
  		)
  </insert>

  <update id="deleteMail">
     UPDATE re_mail
     SET del_yn = 'Y'
     WHERE
     		 user_id = #{userId}
     and mail_no IN
     <foreach item="item" collection="mailNoList" open="(" separator="," close=")">
         #{item}
     </foreach>
  </update>
  
  <select id="selectTrashList" resultMap="receiveMailResult">
		select
				  r.user_id
				, r.mail_no
				, r.read_yn
				, m.user_name
				, s.mail_title
				, to_char(s.trans_time, 'MM-DD HH24:MI') as trans_time
			from re_mail r
			join tb_mail s on (r.mail_no = s.mail_no)			
      join tb_member m on ( m.user_id = s.reg_id)
			where r.del_yn = 'Y'
				and r.user_id = #{userId}
				order by mail_no desc
  </select>
  
  <update id="reStoreMail">
     UPDATE re_mail
     SET del_yn = 'N'
     WHERE
     		 user_id = #{userId}
     and mail_no IN
     <foreach item="item" collection="mailNoList" open="(" separator="," close=")">
         #{item}
     </foreach>
  </update>
  
  <delete id="removeMailList">
     delete
		  FROM re_mail
		  where mail_no in
			  <foreach item="item" collection="list" open="(" separator="," close=")">
	          #{item}
	      </foreach>
  </delete>
  
  <delete id="removeTempSaveChild">
     delete
		  FROM re_mail
		  where 
		  	mail_no in
			  <foreach item="item" collection="list" open="(" separator="," close=")">
	          #{item}
	      </foreach>
  </delete>
  
  <delete id="removeTempSaveList">
     delete
		  FROM tb_mail
		  where temp_save = '01'
		  	and mail_no in
			  <foreach item="item" collection="list" open="(" separator="," close=")">
	          #{item}
	      </foreach>
  </delete>
  
  <select id="selectSearchCount" resultType="_int">
  	select count(*) 
  	  from tb_mail t
  	  join re_mail r on (t.mail_no = r.mail_no)
  	 where t.del_yn = 'N'
  	 	 and ${condition} like '%' || #{keyword} || '%'
  	 	 and r.user_id = #{userId}
  	 	 and r.type = #{type}
  	 	 and r.del_yn = 'N'
  </select>
  
  <select id="selectSearchList" resultMap="receiveMailResult">
		select
				  r.user_id
				, r.mail_no
				, r.read_yn
				, m.user_name
				, s.mail_title
				, to_char(s.trans_time, 'MM-DD HH24:MI') as trans_time
			from re_mail r
			join tb_mail s on (r.mail_no = s.mail_no)			
      join tb_member m on ( m.user_id = s.reg_id)
			where r.del_yn = 'N'
        and r.type= #{type}
				and r.user_id = #{userId}
				and ${condition} like '%' || #{keyword} || '%'
				order by mail_no desc
	</select>

</mapper>
